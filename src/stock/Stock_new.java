package stock;

import bill.db_Connection;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Date;
import java.util.StringTokenizer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import product.product_new;


public class Stock_new extends javax.swing.JFrame {
db_Connection dbconn=null;
       
        
    public Stock_new() {
        dbconn=new db_Connection();
        try {
            
            initComponents();
            setSize(800,600);
            
            try {
                Connection conn =  db_Connection.getconnectiom();
                Statement stmt = conn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
                ResultSet rs = stmt.executeQuery("select * from product_info");
                while(rs.next())
                {
                    String p_name=rs.getString("product_name");
                    p_name=p_name.concat(",");
                    String packing=rs.getString("packing");
                    p_name=p_name.concat(packing);
                    cb_product.addItem(p_name);
                    
                }
            } catch (SQLException ex) {
                Logger.getLogger(Stock_new.class.getName()).log(Level.SEVERE, null, ex);
            }
            Connection conn =  db_Connection.getconnectiom();
            Statement stmt = conn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
            ResultSet rs = stmt.executeQuery("select * from supplier_details");
            while(rs.next())
            {
                String s_name=rs.getString("supplier_name");
                cb_supplier.addItem(s_name);
                
            }
        } catch (SQLException ex) {
            Logger.getLogger(Stock_new.class.getName()).log(Level.SEVERE, null, ex);
        }
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        cb_product = new javax.swing.JComboBox<>();
        bt_add_customer = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        cb_supplier = new javax.swing.JComboBox<>();
        bt_update_stock = new javax.swing.JButton();
        tf_quantity = new javax.swing.JTextField();
        bt_cance = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        tf_date = new com.toedter.calendar.JDateChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 3, 24)); // NOI18N
        jLabel1.setText("Add Stock");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(180, 10, 200, 40);

        jLabel2.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jLabel2.setText("Product");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(90, 80, 90, 30);

        jLabel5.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jLabel5.setText("Quantity");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(90, 160, 90, 30);

        getContentPane().add(cb_product);
        cb_product.setBounds(230, 80, 200, 30);

        bt_add_customer.setText("Add New Product");
        bt_add_customer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_add_customerActionPerformed(evt);
            }
        });
        getContentPane().add(bt_add_customer);
        bt_add_customer.setBounds(100, 260, 120, 30);

        jLabel7.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jLabel7.setText("Supplier");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(90, 120, 90, 30);

        getContentPane().add(cb_supplier);
        cb_supplier.setBounds(230, 120, 200, 30);

        bt_update_stock.setText("Update Stock");
        bt_update_stock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_update_stockActionPerformed(evt);
            }
        });
        getContentPane().add(bt_update_stock);
        bt_update_stock.setBounds(230, 260, 110, 30);
        getContentPane().add(tf_quantity);
        tf_quantity.setBounds(230, 160, 200, 30);

        bt_cance.setText("Cancel");
        bt_cance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_canceActionPerformed(evt);
            }
        });
        getContentPane().add(bt_cance);
        bt_cance.setBounds(350, 260, 100, 30);

        jLabel6.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jLabel6.setText("Purchase Date");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(90, 200, 120, 30);
        getContentPane().add(tf_date);
        tf_date.setBounds(230, 200, 220, 30);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    int getsupplier_id(String supplier)
    {
        int sup_id = 0;
        try {
            Connection conn =  db_Connection.getconnectiom();
            Statement stmt = conn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
            ResultSet rs = stmt.executeQuery("select * from supplier_details where supplier_name=\'"+supplier+"\'");
            rs.next();
            System.out.println("befor return");
            sup_id=rs.getInt("supplier_id");
        } catch (SQLException ex) {
            Logger.getLogger(Stock_new.class.getName()).log(Level.SEVERE, null, ex);
        }
           return sup_id;
    }
    int getproduct_id(String prod_name)
    {
        int prod_id = 0;
        try {
            Connection conn =  db_Connection.getconnectiom();
            Statement stmt = conn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
            StringTokenizer st=new StringTokenizer(prod_name,",");
            String p_name=st.nextToken();
            String packing=st.nextToken();
            ResultSet rs = stmt.executeQuery("select * from product_info where product_name=\'"+p_name+"\'and packing=\'"+packing+"\'");
            rs.next();
            prod_id=rs.getInt("product_id");
            
        } catch (SQLException ex) {
            Logger.getLogger(Stock_new.class.getName()).log(Level.SEVERE, null, ex);
        }
                return prod_id;
    }
    private void bt_update_stockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_update_stockActionPerformed
        String prod_name=(String) cb_product.getSelectedItem();
        String supplier=(String) cb_supplier.getSelectedItem();
        int sup_id=getsupplier_id(supplier);
        int prod_id=getproduct_id(prod_name);
        int quantity = 0;
        try
        {
            quantity=Integer.parseInt(tf_quantity.getText());
        }
        catch(NumberFormatException nf)
        {
            JOptionPane.showMessageDialog(this,"Please enter valid Quantity ex. 5");
        }
        Date dateFromDateChooser = tf_date.getDate();
        String date = String.format("%1$td/%1$tm/%1$tY", dateFromDateChooser);
        if(date.equals(""))
        {
            JOptionPane.showMessageDialog(this, "please choose date");
        }
        else
        {
            try {
                Connection conn =  db_Connection.getconnectiom();
                Statement stmt = conn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
                ResultSet rs = stmt.executeQuery("select * from stock_new");
                rs.moveToInsertRow();
                rs.updateInt("product_id",prod_id );
                rs.updateInt("supplier_id",sup_id );
                rs.updateInt("new_units",quantity);
                rs.updateString("date", date);
                rs.insertRow();
            } catch (SQLException ex) {
                Logger.getLogger(Stock_new.class.getName()).log(Level.SEVERE, null, ex);
            }
            try
            {
                int total;
                int available;
                Connection conn =  db_Connection.getconnectiom();
                Statement stmt = conn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
                ResultSet rs = stmt.executeQuery("select * from stock_available where product_id="+prod_id);
                if(rs.next())
                {
                    available=rs.getInt("available_units");
                    total=rs.getInt("total_units");
                    rs.updateInt("available_units",quantity+available );
                    rs.updateInt("total_units",total+quantity);
                    rs.updateRow();
                }
                else
                {
                    rs.moveToInsertRow();
                    rs.updateInt("available_units",quantity );
                    rs.updateInt("product_id",prod_id );
                    rs.updateInt("total_units",quantity );
                    rs.insertRow();
                }
                
            }
            catch(Exception e)
            {
                System.out.println(e);
            }
                
            
        }
        
        
    }//GEN-LAST:event_bt_update_stockActionPerformed

    private void bt_canceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_canceActionPerformed
        this.dispose();
    }//GEN-LAST:event_bt_canceActionPerformed

    private void bt_add_customerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_add_customerActionPerformed
        product_new pn=new product_new(null);
        pn.setVisible(true);
    }//GEN-LAST:event_bt_add_customerActionPerformed

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Stock_new.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Stock_new.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Stock_new.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Stock_new.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Stock_new().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt_add_customer;
    private javax.swing.JButton bt_cance;
    private javax.swing.JButton bt_update_stock;
    private javax.swing.JComboBox<String> cb_product;
    private javax.swing.JComboBox<String> cb_supplier;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private com.toedter.calendar.JDateChooser tf_date;
    private javax.swing.JTextField tf_quantity;
    // End of variables declaration//GEN-END:variables
}
